

// function perim(a){ // функция и ее название perim
//     let result = 4*a  // переменная result, которая принимает в себя значение 4 умноженное на а(это любое число, которое мы напишем)
//     console.log(result) // вывод в консоль
// }// perim(4); //вызов функции



// function Sq(a){ // функция ,Sq, которая принимает в себя параметр А, в это теле функции мы создаем переменную с ключевым словом let result и присваиваем ей параметр А возведенный в степень возведенный в степень  
//     let result = a ** 2
//     console.log(result) // тут мы выводим в консоль лог переменную result
// }

// Sq(5); // вызываем нашу функцию и заменяем наш парамент любым числом
// тем самым мы получаем 5 возведенную в степень 2



// let L = 5000; // это переменная L с ключевым словом let

// let result = L / 100; //тут мы создаем новую перменную result и присваиваем ей переменную L  деленую на 100 
// console.log(result) //тут мы выводим в консоль лог переменную result


// let A = 10; // тут мы создаем новую переменную A и присваиваем ей значение 10

// if( A > 0) { //дальше мы пишем условие , где говорим, что если наша переменная А больше нуля, то в консоль выводится True
//     console.log(true)
// }else{ //иначе в консоль будет выводиться значение False
//     console.log(false)
// }

// let A2 = 5; // создаем 2 новые переменные А2 и В, присваиваем им значения 5 и 4
// let B = 4;
// дальше пишем условие, если первая переменная больше 2 и вторая переменная меньше или равна 3, то в консоль выводится true
// if(A2 > 2 && B <= 3){
//     console.log(true)
// }else{ // иначе в консоль выводится false
//     console.log(false)
// }

// const pol = (number) => {  // создаем новую функцию pol и передаем ей параметр number, то есть потом мы туда запишем число
//     if(number > 0){  //после этого мы пишем условие, где говорим, что если number больше нуля, то number будет увеличиваться на единицу
//         number++
//         
//     }
//     else // иначе ничего не произойдет и в консоль просто выведится число которое мы написали
//     {
//         console.log(number)
//     }
// }

// pol(-4)// вызов функции, где мы записали в качестве парамерта отрицательное число, -4 меньше нуля, поэтому наше условие не заработало, и в консоль вывелось -4, а если мы напишем просто 4, то наша 4 будет увеличена на один и в консоль выведится 5

// const a = 9;
// const b = 4;
// const c = -6;
// тут мы создаем 3 переменные, где записываем отрицательные числа и положительные
// let posconunt = 0;       // потом создаем две переменные, которые будут отвечать за числа, которые мы написали(одна переменная отвечает за положительные, а другая за отрицательные)
// let negcount = 0;
    //далее мы создаем функцию, в которую передаем параметр А, а в функции мы пишем условие, где говорим, что если а больше нуля, то в первую переменную записываются положительные числа, иначе во вторую переменную буду записываться отрицательные числа 
// function foo(a){
//     if(a>0)posconunt++
//     else negcount++


// }
// foo(a); // потом мы вызываем 3 раза одну и ту же функцию, где передаем наши 3 переменные, а потом в консоль записываем наши переменные которые отвечают за положительные и отрицательные числа
// foo(b);
// foo(c);
// console.log(posconunt);
// console.log(negcount)


// let a = +prompt("введите число") // тут мы создаем переменную а и метод +prompt, он выводит модальоне окно, и запрашивает у пользователя число (плюс перед prompt отвечает за то, чтобы преобразовать то, что введет пользователь в число, так как prompt по умолчанию передает строку)

// switch(a){ // далее мы пишем конструкцию свитч кейс, где в  switch мы передаем в качестве параметра нашу переменную а, а потом пишем кейсы, если пользователь введет число от 1 до 7, то какой-то из кейсов сработает и выведится alert, он отвечает за вывод модального окна, где можно нажать только ок. В случае если пользлователь ничего не введет, сработает deafult, и в кольсоль выведится, что пользователь ничего не написал
//     case 1: alert("понедельник"); break;
//     case 2: alert("вторник"); break;
//     case 3: alert("среда"); break;
//     case 4: alert("четверг"); break;
//     case 5: alert("пятница"); break;
//     case 6: alert("суббота"); break;
//     case 7: alert("воскресенье"); break;
//     default:console.log("вы ничего не написали")
// }

// let K = 3; // тут мы создаем новую переменную и присваиваем значение 3, а другой переменной мы присваиваем значение 7, потом мы создаем цикл, в котором мы создаем переменную i и присваиваеим ей значение 0 потом указываем, что i < n и i++ то есть будет увеличиваться на единицу, потом в теле этого цикла мы пишем console.log() где передаем переменную k, получается что переменная k выведется N раз, число 3 выведется 7 раз в консоль
// let N = 7;

// for(i=0;i<N;i++){
//     console.log(K)
// }

// const a = 20;            // тут мы создаем константу, переменную, которая доступна только для чтения и присваиваем ей значение 20
//         const b = 3; // далее мы создаем еще одну переменную и присваиваем ей значение 3
//         let accum = 0; // и переменная, которая имеет число 0
//         while(accum+b<=a){ // accum + b = 3, 3 <= 20? да! цикл будет работать до тех пор пока условие не станет ложным, каждый раз в циклы accum буджет прибавляться к b , то есть к трем, потом цикл закончится и в консоль выведется 20 - accum(и цисло которое получилось в цикле) в гашем случае получилось 18, потому что дальше цикл не может идти так как услоывие становится ложным и цикл останавливается и в accum записывается число 18, 20 - 18 равно 2, поэтому результат становится два
//            accum = accum+b
           
//         }
        
//         console.log(accum)
//         console.log(a-accum);


        // let m = [5, 4, 6, 73, 1, 2, 9]; тут вы создаем массив(коллекцию значений) в ней записываем любые числа
    // так как мы находим минимальное значение массива, то мы указываем наше изначальное синимальное число, записано как самое первое
// min = m[0]; // 1 
// indx = 0; // 0


// for(let i = 1; i<m.length; i++){ // далее мы пишем цикл, в котором задаем переменной i значение 1 и пробегаем весь массив с помощью метода lenght, что означает длина, то есть наш цикл проходит по каждому значению в массиве от 5 до 9
//     // m[i] - numbers
//     // i - index

// далее мы делаем условие, в котором пишем, что если число массива меньше нашего минимума m[0], то оно становится новым минимумом и записывается в переменную как нимимальное число
// 5 < 5? нет, 4 < 5? да(значит число 4 новый минимум), 4 < 6? да(4 все еще минимум) 1 < 4? да, 1 новый минимум

//    if(m[i] < min){ // если число меньше минимума, то оно становится новым минимумом
//     min = m[i];
//     indx = i;
//    }
//    document.write(m[i] + " ")
// //    console.log(min)
// }
// document.write("мини " + min)
// document.write("индекс " + indx )



// let m = [5, 4, 6, 73, 1, 2, 9]

// let num = (m[0] < 190) ? false: true

// console.log(num)

// let a = 2;
// let b = 18;

// if(a != b){
//     console.log(true)
// }
// else{
//     console.log(false)
// }

// if( a - b == 2){
//     console.log(true)
// }
// else{
//     console.log(false)
// }

// if( a % 2 == 2){
//     a *= 85487;
//     console.log(a)
// }else{
//     a /= 0
//     console.log(a)
// }

// if(typeof(a) == "number") {
//     console.log(a**2)
// }else{ 
//     console.log("not right")
// }

// if(a > b && b < a){
//     console.log("all right")
// }
// else{ 
//     b = a
//     a = b
//     console.log(b , a)    
// }

// let X = 0;
// let Y = 1;
// let Z;

// if( X != 0){
//     Z = 10 / X;
//     console.log(Z);
// }
// else if (Y != 0) {
//     Z = 10 / Y;
//     console.log(Z);
// }
// else{
//     console.log("ошибка деления на ноль")
// }

// let t = +prompt("number:"); //тут мы запрашиваем у пользователя число

// if(t == t){ // если число равно тому числу, которое написал пользователь, то дальше работает цикл
//     for(i=1; i<=t;i++){ // цикл пробегает по числу и выводит его от 1 до до того числа, которое ввел пользователь
//         if ( i % 3 == 0){ // потом начинает работать условие, то есть если число, которое ввел пользователь без остатка делится на 3, то в консоль выводится диапозон этих чисел, НАПРИМЕР мы написали 10, в консоль выведется 3 6 9
//             // если напишем 12, то в консоль будет выведено 3 , 6 , 9 , 12
//             console.log(i)
//         }
//     }

// }


// let I = 1;

// while(I <= 100) {
//     I = +prompt("number")
// } 


// let u = 1; // переменная u равна 1
// // далее мы создаем цикл while, в котором пишем условие, пока u < 15 цикл будет работать
// // потом мы в цикле while указываем цикл for, в котром говорим, чтобы цикл прошелся по каждому элементу цикла и вывел его на экран , далее вы выводим все на экран, и добавляем тег <br>, что означает перенос строки

// while(u < 15){
//     for(i=1; i<u;i++){
//         document.write("*")
//     }
//     document.write("<br>")
//     u++
// }



// массивы

// let arr = [1, null , 5 , true ,3 ,"634", 623, 12,77 ]
// console.log(arr[2] + arr[2])
// console.log(arr.length)

// for(i=0; i<arr.length;i++){
//     console.log(arr[i])
// }


// function ShowMes(a, b){
//     let result = a + b
//     console.log(result)
// }


// ShowMes(arr[2], arr[4]);


// const Mes = (a , b) => {
//     let result = a % b
//     console.log(result)
// }

// Mes(arr[2], arr[4]);

// function checkAge(age) { // мы созжаем функцию checkAge, и передеаем параметр age, далее мы внутри этой функции мы создаем условие и говорим, что если age больше, чем 18, то он возвращает true, иначе он вернет false
//     if(age>=18){
//         return true;
//     }
//     else{return false;}
// }
// // потом мы создаем промпт, где просим пользователя указать возраст, далее создаем условие, где говорим, если в наша функция вернула true, то в консоль выводится +, иначе в консоль выводится -
// let n = prompt("указать возраст")
// if(checkAge(n)) {
//     console.log("+")
// }
// else{
//     console.log('-')
// }

// const max = (a, b) => {
//     if(a < b){
//         console.log(a)
//     }else if(b > a){
//         console.log(b)
//     }
// }

// max(5, 2)

// function sipmle(n){
//     for(let i = 2; i < n; i++)
//     {
//         if(n % i == 0){
//             return false;
//         }

//     }
//     return true;
// } 
//  for(i = 2; i < 100; i++) {
//         if(sipmle(i)) console.log(i)
//     }

// function K(k){
//     switch(k){
//         case 1: console.log("плохо"); break;
//         case 2: console.log("все еще плохо"); break;
//         case 3: console.log("удовлетворительно"); break;
//         case 4: console.log("хорошо"); break;
//         case 5: console.log("отлично"); break;
//         default: console.log("такой оценки нет")
//     }
// }

// K(5)


// let A = 5;
// let B = 11;

// for(i=A; i<=B; i++){
//     console.log(i)
//     N = B - A + 1;
    
// }
// console.log(N)


// const num = (a) => {
//     if(a > 0) {
//         a++
//         console.log(a)
//     }else{
//         a = a - 2
//         console.log(a)
//     }
// }
// num(-5)


// const nechet = (A) => {
//     if( A % 2 != 0){
//         console.log(true)
       
//     }else{
//         console.log(false)
        
//     }
// }
// nechet(3);

// const M = (m) => {
//     let res = m % 1000
//     console.log(res)
// }

// M(4)

// let M = 4000;
// console.log(Math.floor(M / 1000));

// const plosh = (a, b) => {
//     s = a * b
//     perim = 2 * (a + b)
//     console.log("Плошадь = " + s)
//     console.log("Периметр =" + perim)
// }
// plosh(5, 2)


// function math(a,b) {
//     alert(s=a*b);
//     alert(p=2*(a+b));
//     }
//     math(5,2)

// let b = 1024;
// let res = b / 1024
// console.log(res)


// const nechet = (A) => {
//     if( A % 2 == 0){
//         console.log(true)
       
//     }else{
//         console.log(false)
        
//     }
// }
// nechet(2);



// let obj = { // создаем объект, далее создаем в нем свойства, name, lastname, age

//     name: "Sasha",
//     lastname: "Feofanov",
//     age: 30
// }
// // delete obj.name // удалить все элементы массива
// // let second = "namenot" // чтобы добавить свойство в объект, нужно сдлеать новую переменную и присвоить ей значение, потом указать название объекта и в квадратных скобках указать название этой переменной, потом можно будет обратиться к этому свойству
// // obj[second] = "12";

// for(kay in obj) { // обход всех элементов объекта и вывод их на экран
//     console.log(kay+   " = " + obj[kay])
// }

// // console.log(obj) // чтобы обратиться к свойству объекта, нужно указать название объекта и через точку указать название того свойства, к которому вы хотите обратиться

// let innerMenu = { // создали объект, в котором создали 3 свойства, ширина, высота, название.
//     // потом добавили свойство plosh(переменная) в это переменной ширина и высота умножались друг на друга
//     width: 200,
//     heght: 300,
//     title: "title"
// }
// innerMenu.plosh = innerMenu.width * innerMenu.heght; // перемножение свойств объекта

// function multifunc(obj) { // функция, которой мы создаем цикл, который обходит все элементы объекта, потом проверяет, если элемент объекта имеет тип данных number, то они будут умножаться
//     for(key in innerMenu){
//         if(typeof(innerMenu[key]) == "number"){
//             innerMenu[key] *= 2
//         }
//     }
// }

// console.log(innerMenu)


// let user = {

   
//     heght: "171",
//     title: "title"
// }

// user.lastname = "sasha feofanov" // как добавить новое свойство в объект
// console.log(user) 

// let user2 = user

// let user3 = {}
// Object.assign(user3, user) // клонирование объекта
// console.log(user3)

// // console.log(user2)
// // user2.title = "sasha";
// // console.log(user2)


// let user = {

//     func: function(){
//         console.log(this.heght, this.title)
//     },
//     heght: "171",
//     title: "title"
// }


// user.func();

// let calc = {   
//     //функия внутри объекта принимает в себя два значения, то есть два числа
//     read: function(){ // ключивое слово this означает, что мы обращаемся именно к этому значению 

//         this.a = +prompt("1")
//         this.b = +prompt("2")
//     },
//     // далее мы создаем еще 2 функции, которые возвращают сложение или умножение
//     sum: function(){return this.a + this.b;},
//     mul1: function(){return this.a * this.b;}

// };
// calc.read(); // выводим функцию из объекта
// console.log(calc.sum()) // выводим в консоль функцию
// console.log(calc.mul1())


// let arr = ["a", "b", "c"];

// console.log(arr[arr.length - 1]) // [arr.length - 1] - выводит последнее значение массива

// console.log(arr.at(-1)) // эта функция тоже выводит последнее значение массива, просто записывается по другому

// const arr = [1,23, 54 ,36, 367];

// const numbers = arr.map(Math.sqrt)
// console.log(numbers)

// const oddnumbers = arr.filter(n => n % 2 !== 0)
// console.log(oddnumbers)


// const arr2 = [1, 2, 3, 4, 5, 6]
// const oddnumbers = arr2.filter(n => n % 2 !== 0)
// console.log(oddnumbers)

// const numbers = [1, 2, 3, 4, 5, 6]
// const oddNumbers = numbers.filter(n => n % 2 !== 0)
// console.log(oddNumbers) // [1, 3, 5]

const particpants = [
    {id: "1" , username: "sasha"},
    {id: "2", username: "vasa"},
    {id: "3", username: "petr"}
]


function remove(particpants, username , id){
    return particpants.filter(particpants => particpants.username !== username)
}
console.log(remove(particpants, "sasha"))


// let array = [];
// let a = "1 1 1 1 1 1"
// array.push(a)
// console.log(array)


// let a = particpants.map(function(item){
//     // return item.id
//     return item.username
// })
// console.log(a)

// function removeP(particpants , id){
//     return particpants.filter(particpants => particpants.id !== id)

// }

// console.log(removeP(particpants, "2"))


// arr.pop()// удаляет последний элемент массива
// console.log(arr) // теперь в нашем массиве нет последнего элемента "с"
// // сделать примеры(использовать все что я прошел)



// arr.push("sasha"); // добавляет в конец новый элемент
// console.log(arr)
// // сделать примеры(использовать все что я прошел)



// arr.shift(); // удаляет первый элемент массива
// console.log(arr)
// // сделать примеры(использовать все что я прошел)



// arr.unshift("feofanov")// добавляет в начало элемент массива
// console.log(arr)
// // сделать примеры(использовать все что я прошел)



// for(key of arr){
//     console.log(key)
// }

